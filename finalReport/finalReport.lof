\contentsline {figure}{\numberline {1}{\ignorespaces Architecture of map generation}}{13}{figure.caption.16}%
\contentsline {figure}{\numberline {2}{\ignorespaces Architecture of path planning process}}{15}{figure.caption.17}%
\contentsline {figure}{\numberline {3}{\ignorespaces Architecture of map generation}}{20}{figure.caption.18}%
\contentsline {figure}{\numberline {4}{\ignorespaces Architecture of map generation}}{22}{figure.caption.19}%
\contentsline {figure}{\numberline {5}{\ignorespaces Architecture of map generation}}{27}{figure.caption.30}%
\contentsline {figure}{\numberline {6}{\ignorespaces Architecture of map generation}}{28}{figure.caption.31}%
\contentsline {figure}{\numberline {7}{\ignorespaces Screenshot of GUI for this program}}{29}{figure.caption.32}%
\contentsline {figure}{\numberline {8}{\ignorespaces Example of an L shaped field where cell decomposition is optimal, taken from Fields2Cover docs}}{42}{figure.caption.74}%
\contentsline {figure}{\numberline {9}{\ignorespaces Opencv example of canny detection, source \citep {opencv_library} docs}}{42}{figure.caption.75}%
\contentsline {figure}{\numberline {10}{\ignorespaces OpenCV canny edge detection on an image of a golf course}}{43}{figure.caption.76}%
\contentsline {figure}{\numberline {11}{\ignorespaces An example ouput of pytorch model trained on the Danish Golf Course data set}}{43}{figure.caption.77}%
\contentsline {figure}{\numberline {12}{\ignorespaces An example ouput of pytorch model trained on the Danish Golf Course data set}}{44}{figure.caption.78}%
\contentsline {figure}{\numberline {13}{\ignorespaces Output of model trained on ~30 inputs with uncertainty at 0.7 and class weighting}}{44}{figure.caption.79}%
\contentsline {figure}{\numberline {14}{\ignorespaces Output of model trained on ~30 inputs with uncertainty at 0.7 and class weighting}}{45}{figure.caption.80}%
\contentsline {figure}{\numberline {15}{\ignorespaces Output of model trained on ~30 inputs with uncertainty at 0.7 and class weighting}}{45}{figure.caption.81}%
\contentsline {figure}{\numberline {16}{\ignorespaces Runtime of the map generation algorithm}}{46}{figure.caption.82}%
\contentsline {figure}{\numberline {17}{\ignorespaces Runtime of the map generation algorithm with 10 points, variable range, 0 holes}}{46}{figure.caption.83}%
\contentsline {figure}{\numberline {18}{\ignorespaces Memory usage of map generation algorithm vs baseline average and range of the map}}{47}{figure.caption.84}%
\contentsline {figure}{\numberline {19}{\ignorespaces Memory usage of map generation algorithm vs number of holes and points}}{47}{figure.caption.85}%
\contentsline {figure}{\numberline {20}{\ignorespaces Runtime of path planning system with $10^3m^2$ area, 6 corners, accurate robot size, constant headland, brute force swath gen, Reeds-Shepp pathing and shortest route planning}}{48}{figure.caption.86}%
\contentsline {figure}{\numberline {21}{\ignorespaces Runtime of path planning system with $10^3m^2$ area, 6 corners, accurate robot size, constant headland, brute force swath gen, Reeds-Shepp pathing and shortest route planning}}{48}{figure.caption.87}%
\contentsline {figure}{\numberline {22}{\ignorespaces Runtime of path planning system with $10^3m^2$ area, 6 corners, accurate robot size, constant headland, brute force swath gen, Reeds-Shepp pathing and shortest route planning}}{49}{figure.caption.88}%
\contentsline {figure}{\numberline {23}{\ignorespaces Pixel and detection accuracy vs confidence threshold of maskRCNN model}}{50}{figure.caption.89}%
\contentsline {figure}{\numberline {24}{\ignorespaces Pixel accuracy vs intersection over union threshold of maskRCNN model}}{50}{figure.caption.90}%
\providecommand \tocbasic@end@toc@file {}\tocbasic@end@toc@file 
